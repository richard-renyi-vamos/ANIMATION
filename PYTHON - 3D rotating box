import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from matplotlib.animation import FuncAnimation

# Create a figure
fig = plt.figure()

# Add a 3D subplot
ax = fig.add_subplot(111, projection='3d')

# Define the vertices of the box
vertices = np.array([[-1, -1, -1],
                     [1, -1, -1],
                     [1, 1, -1],
                     [-1, 1, -1],
                     [-1, -1, 1],
                     [1, -1, 1],
                     [1, 1, 1],
                     [-1, 1, 1]])

# Define the edges of the box
edges = [[0, 1], [1, 2], [2, 3], [3, 0],
         [4, 5], [5, 6], [6, 7], [7, 4],
         [0, 4], [1, 5], [2, 6], [3, 7]]

# Plot the box
for edge in edges:
    ax.plot3D(*vertices[edge, :].T, 'b')

# Set axis labels
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')

# Function to update the plot for animation
def animate(i):
    ax.cla()
    ax.set_xlabel('X')
    ax.set_ylabel('Y')
    ax.set_zlabel('Z')
    angle = i * 3  # Adjust the rotation speed here
    rot_matrix = np.array([[np.cos(np.radians(angle)), -np.sin(np.radians(angle)), 0],
                           [np.sin(np.radians(angle)), np.cos(np.radians(angle)), 0],
                           [0, 0, 1]])
    rotated_vertices = np.dot(vertices, rot_matrix)
    for edge in edges:
        ax.plot3D(*rotated_vertices[edge, :].T, 'b')

# Create an animation
ani = FuncAnimation(fig, animate, frames=120, interval=50)

plt.show()
